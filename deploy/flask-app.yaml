---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flask-config
  namespace: flask-app
data:
  FLASK_DEBUG: "1"
  FLASK_APP: api.py
  FLASK_ENVIRONMENT: development
  DB_USERNAME: devops
  DB_NAME: student
  DB_HOSTNAME: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  labels:
    name: flask-app
  namespace: flask-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask-app
          image: spytliak/genesis-flask-rest-api:v1
          imagePullPolicy: Always
          command: ["python"]
          args: ["-m", "flask", "run"]
          envFrom:
            - configMapRef:
                name: flask-config
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: mysql-password
          resources:
            limits:
              memory: "256Mi"
              cpu: "300m"
            requests:
              memory: "256Mi"
              cpu: "200m"
          ports:
            - containerPort: 5000
              name: flask
          startupProbe:
            httpGet:
              path: /api/health-check/ok
              port: flask
            failureThreshold: 5
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /api/health-check/ok
              port: flask
            failureThreshold: 5
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: flask-app
spec:
  selector:
    name: flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: flask
      name: flask-app-svc
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    namespace: flask-app
    name: flask-app-ingress
    annotations:
        kubernetes.io/ingress.class: alb
        alb.ingress.kubernetes.io/group.name: flask-app.main-group
        alb.ingress.kubernetes.io/scheme: internet-facing
        alb.ingress.kubernetes.io/target-type: ip
        alb.ingress.kubernetes.io/ip-address-type: ipv4
        alb.ingress.kubernetes.io/tags: Service=flask-app.Ingress
        alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
        alb.ingress.kubernetes.io/success-codes: 200,404
        alb.ingress.kubernetes.io/healthcheck-path: /api/health-check/ok
        alb.ingress.kubernetes.io/backend-protocol: HTTP
        alb.ingress.kubernetes.io/healthcheck-protocol : HTTP
        alb.ingress.kubernetes.io/target-group-attributes: "deregistration_delay.timeout_seconds=30"
spec:
    rules:
        - http:
            paths:
            -   path: /
                pathType: Prefix
                backend:
                    service:
                        name: flask-app-svc
                        port:
                            number: 5000
status:
    loadBalancer: {}
